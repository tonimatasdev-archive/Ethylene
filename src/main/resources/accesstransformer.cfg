public net.minecraft.server.players.StoredUserEntry getUser()Ljava/lang/Object; # getUser
public net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings palette # palette
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate entityInfoList # entityInfoList
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate palettes # palettes
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager structureRepository # structureRepository
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager loadFromGenerated(Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; # loadFromGenerated
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager loadFromResource(Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; # loadFromResource
public net.minecraft.world.BossEvent name # name
public net.minecraft.world.BossEvent color # color
public net.minecraft.world.BossEvent overlay # overlay
public net.minecraft.server.level.ServerBossEvent visible # visible
public net.minecraft.server.level.ServerBossEvent broadcast(Ljava/util/function/Function;)V # broadcast
public net.minecraft.world.level.dimension.end.EndDragonFight level # level
public net.minecraft.world.level.dimension.end.EndDragonFight dragonUUID # dragonUUID
public net.minecraft.world.level.dimension.end.EndDragonFight dragonEvent # dragonEvent
public net.minecraft.world.level.dimension.end.EndDragonFight portalLocation # portalLocation
public net.minecraft.world.level.dimension.end.EndDragonFight previouslyKilled # previouslyKilled
public net.minecraft.world.level.dimension.end.EndDragonFight findExitPortal()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; # findExitPortal
public net.minecraft.world.level.dimension.end.EndDragonFight spawnExitPortal(Z)V # spawnExitPortal
public net.minecraft.world.level.dimension.end.EndDragonFight respawnDragon(Ljava/util/List;)V # respawnDragon
public net.minecraft.world.level.dimension.end.EndDragonFight respawnStage # respawnStage
public net.minecraft.world.level.dimension.end.EndDragonFight setRespawnStage(Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V # setRespawnStage
public net.minecraft.world.flag.FeatureFlag universe # universe
public net.minecraft.world.flag.FeatureFlagRegistry names # names
public net.minecraft.world.level.block.SoundType breakSound # breakSound
public net.minecraft.world.level.block.SoundType hitSound # hitSound
public net.minecraft.world.entity.raid.Raid ticksActive # ticksActive
public net.minecraft.world.entity.raid.Raid raidOmenLevel # raidOmenLevel
public net.minecraft.world.entity.raid.Raid numGroups # numGroups
public net.minecraft.world.entity.raid.Raid heroesOfTheVillage # heroesOfTheVillage
public net.minecraft.world.scores.criteria.ObjectiveCriteria CRITERIA_CACHE # CRITERIA_CACHE
public net.minecraft.server.players.PlayerList updateEntireScoreboard(Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V # updateEntireScoreboard
public net.minecraft.nbt.ListTag <init>(Ljava/util/List;B)V # <init>
public net.minecraft.world.level.saveddata.maps.MapItemSavedData setColorsDirty(II)V # setColorsDirty
public net.minecraft.world.level.saveddata.maps.MapItemSavedData decorations # decorations
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData scale # scale
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData dimension # dimension
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData centerX # centerX
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData centerZ # centerZ
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData trackingPosition # trackingPosition
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData unlimitedTracking # unlimitedTracking
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData locked # locked
public net.minecraft.server.packs.repository.Pack resources # resources
public net.minecraft.world.entity.animal.horse.AbstractHorse inventory # inventory
public net.minecraft.world.level.block.state.StateHolder PROPERTY_ENTRY_TO_STRING_FUNCTION # PROPERTY_ENTRY_TO_STRING_FUNCTION
public net.minecraft.world.level.block.state.properties.IntegerProperty min # min
public net.minecraft.world.level.block.state.properties.IntegerProperty max # max
public net.minecraft.world.level.biome.Biome getTemperature(Lnet/minecraft/core/BlockPos;)F # getTemperature
public net.minecraft.world.level.block.entity.BannerBlockEntity baseColor # baseColor
public net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity lootTable # lootTable
public net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity lootTableSeed # lootTableSeed
public net.minecraft.world.level.block.entity.BarrelBlockEntity openersCounter # openersCounter
public net.minecraft.world.level.block.entity.BarrelBlockEntity updateBlockState(Lnet/minecraft/world/level/block/state/BlockState;Z)V # updateBlockState
public net.minecraft.world.level.block.entity.BarrelBlockEntity playSound(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V # playSound
public net.minecraft.world.level.block.entity.BeaconBlockEntity levels # levels
public net.minecraft.world.level.block.entity.BeaconBlockEntity primaryPower # primaryPower
public net.minecraft.world.level.block.entity.BeaconBlockEntity secondaryPower # secondaryPower
public net.minecraft.world.level.block.entity.BeaconBlockEntity name # name
public net.minecraft.world.level.block.entity.BeaconBlockEntity lockKey # lockKey
public net.minecraft.world.level.block.entity.BeehiveBlockEntity savedFlowerPos # savedFlowerPos
public net.minecraft.world.level.block.entity.BellBlockEntity resonating # resonating
public net.minecraft.world.level.block.FireBlock igniteOdds # igniteOdds
public net.minecraft.world.level.block.entity.BrewingStandBlockEntity brewTime # brewTime
public net.minecraft.world.level.block.entity.BrewingStandBlockEntity fuel # fuel
public net.minecraft.world.level.block.entity.BrushableBlockEntity item # item
public net.minecraft.world.level.block.entity.BrushableBlockEntity lootTable # lootTable
public net.minecraft.world.level.block.entity.BrushableBlockEntity lootTableSeed # lootTableSeed
public net.minecraft.world.level.block.entity.CampfireBlockEntity cookingProgress # cookingProgress
public net.minecraft.world.level.block.entity.CampfireBlockEntity cookingTime # cookingTime
public net.minecraft.world.level.block.ChestBlock getMenuProvider(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; # getMenuProvider
public net.minecraft.world.level.block.entity.ChestBlockEntity openersCounter # openersCounter
public net.minecraft.world.level.block.entity.ChiseledBookShelfBlockEntity lastInteractedSlot # lastInteractedSlot
public net.minecraft.world.level.block.ChiseledBookShelfBlock getSection(F)I # getSection
public net.minecraft.world.level.block.entity.ConduitBlockEntity effectBlocks # effectBlocks
public net.minecraft.world.level.block.entity.ConduitBlockEntity destroyTarget # destroyTarget
public net.minecraft.world.level.block.entity.ConduitBlockEntity destroyTargetUUID # destroyTargetUUID
public net.minecraft.world.level.block.entity.ConduitBlockEntity updateDestroyTarget(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V # updateDestroyTarget
public net.minecraft.world.level.block.entity.ConduitBlockEntity getDestroyRangeAABB(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; # getDestroyRangeAABB
public net.minecraft.world.level.block.entity.BaseContainerBlockEntity lockKey # lockKey
public net.minecraft.world.level.block.entity.BaseContainerBlockEntity name # name
public net.minecraft.world.level.block.entity.CrafterBlockEntity craftingTicksRemaining # craftingTicksRemaining
public net.minecraft.world.level.BaseSpawner nextSpawnData # nextSpawnData
public net.minecraft.world.level.BaseSpawner spawnPotentials # spawnPotentials
public net.minecraft.world.level.BaseSpawner spawnDelay # spawnDelay
public net.minecraft.world.level.BaseSpawner minSpawnDelay # minSpawnDelay
public net.minecraft.world.level.BaseSpawner maxSpawnDelay # maxSpawnDelay
public net.minecraft.world.level.BaseSpawner maxNearbyEntities # maxNearbyEntities
public net.minecraft.world.level.BaseSpawner spawnCount # spawnCount
public net.minecraft.world.level.BaseSpawner requiredPlayerRange # requiredPlayerRange
public net.minecraft.world.level.BaseSpawner spawnRange # spawnRange
public net.minecraft.world.level.block.entity.DecoratedPotBlockEntity decorations # decorations
public net.minecraft.world.level.block.DispenserBlock dispenseFrom(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V # dispenseFrom
public net.minecraft.world.level.block.DropperBlock dispenseFrom(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V # dispenseFrom
public net.minecraft.world.level.block.entity.EnderChestBlockEntity openersCounter # openersCounter
public net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity exitPortal # exitPortal
public net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity exactTeleport # exactTeleport
public net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity age # age
public net.minecraft.world.level.block.entity.JukeboxBlockEntity recordStartedTick # recordStartedTick
public net.minecraft.world.level.block.entity.JukeboxBlockEntity isPlaying # isPlaying
public net.minecraft.world.level.block.entity.JukeboxBlockEntity tickCount # tickCount
public net.minecraft.world.level.block.entity.LecternBlockEntity setPage(I)V # setPage
public net.minecraft.world.level.block.entity.LecternBlockEntity bookAccess # bookAccess
public net.minecraft.world.level.block.entity.SculkCatalystBlockEntity$CatalystListener bloom(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V # bloom
public net.minecraft.world.level.block.entity.SculkSensorBlockEntity lastVibrationFrequency # lastVibrationFrequency
public net.minecraft.world.level.block.entity.SculkShriekerBlockEntity warningLevel # warningLevel
public net.minecraft.world.level.block.ShulkerBoxBlock color # color
public net.minecraft.world.level.block.entity.SkullBlockEntity noteBlockSound # noteBlockSound
public net.minecraft.world.level.block.entity.StructureBlockEntity author # author
public net.minecraft.world.level.block.entity.StructureBlockEntity structurePos # structurePos
public net.minecraft.world.level.block.entity.StructureBlockEntity structureSize # structureSize
public net.minecraft.world.level.block.entity.StructureBlockEntity mirror # mirror
public net.minecraft.world.level.block.entity.StructureBlockEntity rotation # rotation
public net.minecraft.world.level.block.entity.StructureBlockEntity mode # mode
public net.minecraft.world.level.block.entity.StructureBlockEntity ignoreEntities # ignoreEntities
public net.minecraft.world.level.block.entity.StructureBlockEntity showAir # showAir
public net.minecraft.world.level.block.entity.StructureBlockEntity showBoundingBox # showBoundingBox
public net.minecraft.world.level.block.entity.StructureBlockEntity integrity # integrity
public net.minecraft.world.level.block.entity.StructureBlockEntity seed # seed
public net.minecraft.world.level.block.entity.StructureBlockEntity metaData # metaData
public net.minecraft.nbt.TagParser readArrayTag()Lnet/minecraft/nbt/Tag; # readArrayTag
public net.minecraft.nbt.TagParser type(Ljava/lang/String;)Lnet/minecraft/nbt/Tag; # type
public net.minecraft.world.level.chunk.LevelChunk level # level
public net.minecraft.server.level.ServerLevel entityManager # entityManager
public net.minecraft.world.level.entity.PersistentEntitySectionManager ensureChunkQueuedForLoad(J)V # ensureChunkQueuedForLoad
public net.minecraft.world.level.entity.PersistentEntitySectionManager permanentStorage # permanentStorage
public net.minecraft.world.level.chunk.ChunkAccess blockEntities # blockEntities
public net.minecraft.world.level.chunk.storage.ChunkSerializer BLOCK_STATE_CODEC # BLOCK_STATE_CODEC
public net.minecraft.world.level.chunk.ChunkAccess heightmaps # heightmaps
public net.minecraft.server.MinecraftServer playerDataStorage # playerDataStorage
public net.minecraft.world.level.storage.PlayerDataStorage load(Lnet/minecraft/world/entity/player/Player;Ljava/lang/String;)Ljava/util/Optional; # load
public net.minecraft.world.entity.projectile.AbstractHurtingProjectile assignPower(DDD)V # assignPower
public net.minecraft.world.entity.animal.Animal loveCause # loveCause
public net.minecraft.world.entity.animal.Animal inLove # inLove
public net.minecraft.world.entity.projectile.windcharge.AbstractWindCharge explode()V # explode
public net.minecraft.world.entity.animal.allay.Allay canDuplicate()Z # canDuplicate
public net.minecraft.world.entity.animal.allay.Allay duplicationCooldown # duplicationCooldown
public net.minecraft.world.entity.animal.allay.Allay resetDuplicationCooldown()V # resetDuplicationCooldown
public net.minecraft.world.entity.animal.allay.Allay jukeboxPos # jukeboxPos
public net.minecraft.world.entity.animal.allay.Allay duplicateAllay()V # duplicateAllay
public net.minecraft.world.entity.AreaEffectCloud waitTime # waitTime
public net.minecraft.world.entity.AreaEffectCloud reapplicationDelay # reapplicationDelay
public net.minecraft.world.entity.AreaEffectCloud durationOnUse # durationOnUse
public net.minecraft.world.entity.AreaEffectCloud radiusOnUse # radiusOnUse
public net.minecraft.world.entity.AreaEffectCloud radiusPerTick # radiusPerTick
public net.minecraft.world.entity.AreaEffectCloud potionContents # potionContents
public net.minecraft.world.entity.AreaEffectCloud updateColor()V # updateColor
public net.minecraft.world.entity.decoration.ArmorStand bodyPose # bodyPose
public net.minecraft.world.entity.decoration.ArmorStand leftArmPose # leftArmPose
public net.minecraft.world.entity.decoration.ArmorStand rightArmPose # rightArmPose
public net.minecraft.world.entity.decoration.ArmorStand leftLegPose # leftLegPose
public net.minecraft.world.entity.decoration.ArmorStand rightLegPose # rightLegPose
public net.minecraft.world.entity.decoration.ArmorStand headPose # headPose
public net.minecraft.world.entity.decoration.ArmorStand setSmall(Z)V # setSmall
public net.minecraft.world.entity.decoration.ArmorStand setMarker(Z)V # setMarker
public net.minecraft.world.entity.decoration.ArmorStand disabledSlots # disabledSlots
public net.minecraft.world.entity.projectile.windcharge.BreezeWindCharge explode()V # explode
public net.minecraft.world.entity.projectile.windcharge.WindCharge explode()V # explode
public net.minecraft.world.entity.Mob lootTable # lootTable
public net.minecraft.world.entity.Mob lootTableSeed # lootTableSeed
public net.minecraft.world.entity.animal.Bee hivePos # hivePos
public net.minecraft.world.entity.animal.Bee setHasNectar(Z)V # setHasNectar
public net.minecraft.world.entity.animal.Bee setHasStung(Z)V # setHasStung
public net.minecraft.world.entity.animal.Bee stayOutOfHiveCountdown # stayOutOfHiveCountdown
public net.minecraft.world.entity.Display$BlockDisplay getBlockState()Lnet/minecraft/world/level/block/state/BlockState; # getBlockState
public net.minecraft.world.entity.Display$BlockDisplay setBlockState(Lnet/minecraft/world/level/block/state/BlockState;)V # setBlockState
public net.minecraft.world.entity.vehicle.Boat status # status
public net.minecraft.world.entity.animal.Cat setCollarColor(Lnet/minecraft/world/item/DyeColor;)V # setCollarColor
public net.minecraft.world.entity.animal.horse.AbstractHorse createInventory()V # createInventory
public net.minecraft.world.entity.monster.Creeper maxSwell # maxSwell
public net.minecraft.world.entity.monster.Creeper swell # swell
public net.minecraft.world.entity.monster.Creeper explosionRadius # explosionRadius
public net.minecraft.world.entity.monster.Creeper explodeCreeper()V # explodeCreeper
public net.minecraft.world.entity.Display createTransformation(Lnet/minecraft/network/syncher/SynchedEntityData;)Lcom/mojang/math/Transformation; # createTransformation
public net.minecraft.world.entity.Display setTransformation(Lcom/mojang/math/Transformation;)V # setTransformation
public net.minecraft.world.entity.Display getTransformationInterpolationDuration()I # getTransformationInterpolationDuration
public net.minecraft.world.entity.Display setTransformationInterpolationDuration(I)V # setTransformationInterpolationDuration
public net.minecraft.world.entity.Display DATA_POS_ROT_INTERPOLATION_DURATION_ID # DATA_POS_ROT_INTERPOLATION_DURATION_ID
public net.minecraft.world.entity.Display getViewRange()F # getViewRange
public net.minecraft.world.entity.Display setViewRange(F)V # setViewRange
public net.minecraft.world.entity.Display getShadowRadius()F # getShadowRadius
public net.minecraft.world.entity.Display setShadowRadius(F)V # setShadowRadius
public net.minecraft.world.entity.Display getShadowStrength()F # getShadowStrength
public net.minecraft.world.entity.Display setShadowStrength(F)V # setShadowStrength
public net.minecraft.world.entity.Display getWidth()F # getWidth
public net.minecraft.world.entity.Display setWidth(F)V # setWidth
public net.minecraft.world.entity.Display getHeight()F # getHeight
public net.minecraft.world.entity.Display setHeight(F)V # setHeight
public net.minecraft.world.entity.Display getTransformationInterpolationDelay()I # getTransformationInterpolationDelay
public net.minecraft.world.entity.Display setTransformationInterpolationDelay(I)V # setTransformationInterpolationDelay
public net.minecraft.world.entity.Display getBillboardConstraints()Lnet/minecraft/world/entity/Display$BillboardConstraints; # getBillboardConstraints
public net.minecraft.world.entity.Display setBillboardConstraints(Lnet/minecraft/world/entity/Display$BillboardConstraints;)V # setBillboardConstraints
public net.minecraft.world.entity.Display getGlowColorOverride()I # getGlowColorOverride
public net.minecraft.world.entity.Display setGlowColorOverride(I)V # setGlowColorOverride
public net.minecraft.world.entity.Display getBrightnessOverride()Lnet/minecraft/util/Brightness; # getBrightnessOverride
public net.minecraft.world.entity.Display setBrightnessOverride(Lnet/minecraft/util/Brightness;)V # setBrightnessOverride
public net.minecraft.world.entity.monster.Zombie conversionTime # conversionTime
public net.minecraft.world.entity.monster.Zombie DATA_DROWNED_CONVERSION_ID # DATA_DROWNED_CONVERSION_ID
public net.minecraft.world.entity.monster.Zombie startUnderWaterConversion(I)V # startUnderWaterConversion
public net.minecraft.world.entity.monster.Guardian setActiveAttackTarget(I)V # setActiveAttackTarget
public net.minecraft.world.entity.monster.Guardian$GuardianAttackGoal
public net.minecraft.world.entity.monster.Guardian$GuardianAttackGoal attackTime # attackTime
public net.minecraft.world.entity.boss.enderdragon.EnderDragon subEntities # subEntities
public net.minecraft.world.entity.monster.EnderMan teleport()Z # teleport
public net.minecraft.world.entity.monster.EnderMan teleportTowards(Lnet/minecraft/world/entity/Entity;)Z # teleportTowards
public net.minecraft.world.entity.projectile.EyeOfEnder tx # tx
public net.minecraft.world.entity.projectile.EyeOfEnder ty # ty
public net.minecraft.world.entity.projectile.EyeOfEnder tz # tz
public net.minecraft.world.entity.projectile.EyeOfEnder surviveAfterDeath # surviveAfterDeath
public net.minecraft.world.entity.projectile.EyeOfEnder life # life
public net.minecraft.world.entity.projectile.AbstractArrow inGround # inGround
public net.minecraft.world.entity.Entity getFireImmuneTicks()I # getFireImmuneTicks
public net.minecraft.world.entity.Entity hasVisualFire # hasVisualFire
public net.minecraft.world.entity.Entity passengers # passengers
public net.minecraft.server.level.ChunkMap entityMap # entityMap
public net.minecraft.server.level.ChunkMap$TrackedEntity
public net.minecraft.server.level.ChunkMap$TrackedEntity seenBy # seenBy
public net.minecraft.world.entity.Entity portalCooldown # portalCooldown
public net.minecraft.server.level.ChunkMap$TrackedEntity broadcast(Lnet/minecraft/network/protocol/Packet;)V # broadcast
public net.minecraft.world.entity.player.Player getFireImmuneTicks()I # getFireImmuneTicks
public net.minecraft.world.entity.animal.Wolf setCollarColor(Lnet/minecraft/world/item/DyeColor;)V # setCollarColor
public net.minecraft.world.entity.boss.wither.WitherBoss bossEvent # bossEvent
public net.minecraft.world.entity.monster.Vindicator isJohnny # isJohnny
public net.minecraft.world.entity.monster.ZombieVillager villagerConversionTime # villagerConversionTime
public net.minecraft.world.entity.monster.ZombieVillager DATA_CONVERTING_ID # DATA_CONVERTING_ID
public net.minecraft.world.entity.monster.ZombieVillager conversionStarter # conversionStarter
public net.minecraft.world.entity.monster.ZombieVillager startConverting(Ljava/util/UUID;I)V # startConverting
public net.minecraft.world.entity.npc.Villager releaseAllPois()V # releaseAllPois
public net.minecraft.world.entity.npc.Villager setUnhappy()V # setUnhappy
public net.minecraft.world.entity.monster.Vex limitedLifeTicks # limitedLifeTicks
public net.minecraft.world.entity.monster.Vex hasLimitedLife # hasLimitedLife
public net.minecraft.world.entity.animal.TropicalFish getPackedVariant()I # getPackedVariant
public net.minecraft.world.entity.animal.TropicalFish setPackedVariant(I)V # setPackedVariant
public net.minecraft.world.entity.projectile.AbstractArrow pickupItemStack # pickupItemStack
public net.minecraft.world.entity.projectile.AbstractArrow knockback # knockback
public net.minecraft.world.entity.projectile.AbstractArrow life # life
public net.minecraft.world.entity.item.PrimedTnt owner # owner
public net.minecraft.world.entity.Display$TextDisplay getText()Lnet/minecraft/network/chat/Component; # getText
public net.minecraft.world.entity.Display$TextDisplay setText(Lnet/minecraft/network/chat/Component;)V # setText
public net.minecraft.world.entity.Display$TextDisplay getLineWidth()I # getLineWidth
public net.minecraft.world.entity.Display$TextDisplay DATA_LINE_WIDTH_ID # DATA_LINE_WIDTH_ID
public net.minecraft.world.entity.Display$TextDisplay getBackgroundColor()I # getBackgroundColor
public net.minecraft.world.entity.Display$TextDisplay DATA_BACKGROUND_COLOR_ID # DATA_BACKGROUND_COLOR_ID
public net.minecraft.world.entity.Display$TextDisplay getTextOpacity()B # getTextOpacity
public net.minecraft.world.entity.Display$TextDisplay setTextOpacity(B)V # setTextOpacity
public net.minecraft.world.entity.Display$TextDisplay getFlags()B # getFlags
public net.minecraft.world.entity.Display$TextDisplay setFlags(B)V # setFlags
public net.minecraft.world.entity.animal.frog.Tadpole age # age
public net.minecraft.world.entity.monster.Strider steering # steering
public net.minecraft.world.entity.monster.SpellcasterIllager$IllagerSpell
public net.minecraft.world.entity.monster.SpellcasterIllager getCurrentSpell()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; # getCurrentSpell
public net.minecraft.world.entity.projectile.SpectralArrow duration # duration
public net.minecraft.world.entity.animal.sniffer.Sniffer getExploredPositions()Ljava/util/stream/Stream; # getExploredPositions
public net.minecraft.world.entity.animal.sniffer.Sniffer getExploredPositions()Ljava/util/stream/Stream; # getExploredPositions
public net.minecraft.world.entity.animal.sniffer.Sniffer storeExploredPosition(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; # storeExploredPosition
public net.minecraft.world.entity.animal.sniffer.Sniffer getState()Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; # getState
public net.minecraft.world.entity.animal.sniffer.Sniffer calculateDigPosition()Ljava/util/Optional; # calculateDigPosition
public net.minecraft.world.entity.animal.sniffer.Sniffer canDig()Z # canDig
public net.minecraft.world.entity.animal.horse.SkeletonHorse trapTime # trapTime
public net.minecraft.world.entity.monster.Skeleton conversionTime # conversionTime
public net.minecraft.world.entity.monster.Skeleton DATA_STRAY_CONVERSION_ID # DATA_STRAY_CONVERSION_ID
public net.minecraft.world.entity.monster.Skeleton startFreezeConversion(I)V # startFreezeConversion
public net.minecraft.world.entity.monster.Shulker DATA_COLOR_ID # DATA_COLOR_ID
public net.minecraft.world.entity.monster.Shulker getRawPeekAmount()I # getRawPeekAmount
public net.minecraft.world.entity.monster.Shulker setRawPeekAmount(I)V # setRawPeekAmount
public net.minecraft.world.entity.monster.Shulker setAttachFace(Lnet/minecraft/core/Direction;)V # setAttachFace
public net.minecraft.world.entity.monster.Pillager inventory # inventory
public net.minecraft.world.entity.monster.piglin.AbstractPiglin isImmuneToZombification()Z # isImmuneToZombification
public net.minecraft.world.entity.monster.piglin.AbstractPiglin timeInOverworld # timeInOverworld
public net.minecraft.world.entity.monster.piglin.Piglin cannotHunt # cannotHunt
public net.minecraft.world.entity.monster.piglin.Piglin inventory # inventory
public net.minecraft.world.entity.animal.Pig steering # steering
public net.minecraft.world.entity.decoration.HangingEntity setDirection(Lnet/minecraft/core/Direction;)V # setDirection
public net.minecraft.world.entity.OminousItemSpawner spawnItemAfterTicks # spawnItemAfterTicks
public net.minecraft.world.entity.OminousItemSpawner setItem(Lnet/minecraft/world/item/ItemStack;)V # setItem
public net.minecraft.world.entity.animal.Ocelot isTrusting()Z # isTrusting
public net.minecraft.world.entity.animal.Ocelot setTrusting(Z)V # setTrusting
public net.minecraft.world.entity.animal.MushroomCow stewEffects # stewEffects
public net.minecraft.world.entity.vehicle.MinecartTNT fuse # fuse
public net.minecraft.world.entity.vehicle.MinecartTNT explode(D)V # explode
public net.minecraft.world.entity.vehicle.AbstractMinecartContainer lootTable # lootTable
public net.minecraft.world.entity.vehicle.AbstractMinecartContainer lootTableSeed # lootTableSeed
public net.minecraft.world.entity.vehicle.MinecartFurnace fuel # fuel
public net.minecraft.world.entity.vehicle.MinecartCommandBlock DATA_ID_COMMAND_NAME # DATA_ID_COMMAND_NAME
public net.minecraft.world.entity.LivingEntity lastHurtByPlayer # lastHurtByPlayer
public net.minecraft.world.entity.LivingEntity activeEffects # activeEffects
public net.minecraft.world.entity.Entity getSharedFlag(I)Z # getSharedFlag
public net.minecraft.world.entity.Entity setSharedFlag(IZ)V # setSharedFlag
public net.minecraft.world.entity.LightningBolt visualOnly # visualOnly
public net.minecraft.world.entity.LightningBolt flashes # flashes
public net.minecraft.world.entity.LightningBolt life # life
public net.minecraft.world.entity.projectile.LargeFireball explosionPower # explosionPower
public net.minecraft.world.entity.decoration.ItemFrame setDirection(Lnet/minecraft/core/Direction;)V # setDirection
public net.minecraft.world.entity.decoration.ItemFrame DATA_ITEM # DATA_ITEM
public net.minecraft.world.entity.decoration.ItemFrame DATA_ROTATION # DATA_ROTATION
public net.minecraft.world.entity.decoration.HangingEntity pos # pos
public net.minecraft.world.entity.decoration.ItemFrame dropChance # dropChance
public net.minecraft.world.entity.decoration.ItemFrame fixed # fixed
public net.minecraft.world.entity.Display$ItemDisplay getItemStack()Lnet/minecraft/world/item/ItemStack; # getItemStack
public net.minecraft.world.entity.Display$ItemDisplay setItemStack(Lnet/minecraft/world/item/ItemStack;)V # setItemStack
public net.minecraft.world.entity.Display$ItemDisplay getItemTransform()Lnet/minecraft/world/item/ItemDisplayContext; # getItemTransform
public net.minecraft.world.entity.Display$ItemDisplay setItemTransform(Lnet/minecraft/world/item/ItemDisplayContext;)V # setItemTransform
public net.minecraft.world.entity.item.ItemEntity pickupDelay # pickupDelay
public net.minecraft.world.entity.item.ItemEntity age # age
public net.minecraft.world.entity.item.ItemEntity target # target
public net.minecraft.world.entity.item.ItemEntity thrower # thrower
public net.minecraft.world.entity.Interaction getWidth()F # getWidth
public net.minecraft.world.entity.Interaction setWidth(F)V # setWidth
public net.minecraft.world.entity.Interaction getHeight()F # getHeight
public net.minecraft.world.entity.Interaction setHeight(F)V # setHeight
public net.minecraft.world.entity.Interaction getResponse()Z # getResponse
public net.minecraft.world.entity.Interaction setResponse(Z)V # setResponse
public net.minecraft.world.entity.Interaction$PlayerAction
public net.minecraft.world.entity.Interaction attack # attack
public net.minecraft.world.entity.Interaction interaction # interaction
public net.minecraft.world.entity.Interaction$PlayerAction player()Ljava/util/UUID; # player
public net.minecraft.world.entity.Interaction$PlayerAction timestamp()J # timestamp
public net.minecraft.world.entity.animal.horse.Horse setVariantAndMarkings(Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V # setVariantAndMarkings
public net.minecraft.world.entity.monster.hoglin.Hoglin isImmuneToZombification()Z # isImmuneToZombification
public net.minecraft.world.entity.monster.hoglin.Hoglin cannotBeHunted # cannotBeHunted
public net.minecraft.world.entity.monster.hoglin.Hoglin timeInOverworld # timeInOverworld
public net.minecraft.world.entity.animal.goat.Goat DATA_HAS_LEFT_HORN # DATA_HAS_LEFT_HORN
public net.minecraft.world.entity.animal.goat.Goat DATA_HAS_RIGHT_HORN # DATA_HAS_RIGHT_HORN
public net.minecraft.world.entity.GlowSquid setDarkTicks(I)V # setDarkTicks
public net.minecraft.world.entity.animal.Fox setSleeping(Z)V # setSleeping
public net.minecraft.world.entity.animal.Fox DATA_TRUSTED_ID_0 # DATA_TRUSTED_ID_0
public net.minecraft.world.entity.animal.Fox DATA_TRUSTED_ID_1 # DATA_TRUSTED_ID_1
public net.minecraft.world.entity.projectile.FishingHook hookedIn # hookedIn
public net.minecraft.world.entity.projectile.FishingHook DATA_HOOKED_ENTITY # DATA_HOOKED_ENTITY
public net.minecraft.world.entity.projectile.FishingHook currentState # currentState
public net.minecraft.world.entity.projectile.FishingHook pullEntity(Lnet/minecraft/world/entity/Entity;)V # pullEntity
public net.minecraft.world.entity.projectile.FireworkRocketEntity DATA_ID_FIREWORKS_ITEM # DATA_ID_FIREWORKS_ITEM
public net.minecraft.world.entity.projectile.FireworkRocketEntity lifetime # lifetime
public net.minecraft.world.entity.projectile.FireworkRocketEntity attachedToEntity # attachedToEntity
public net.minecraft.world.entity.projectile.FireworkRocketEntity life # life
public net.minecraft.world.entity.projectile.FireworkRocketEntity DATA_SHOT_AT_ANGLE # DATA_SHOT_AT_ANGLE
public net.minecraft.world.entity.item.FallingBlockEntity cancelDrop # cancelDrop
public net.minecraft.world.entity.item.FallingBlockEntity hurtEntities # hurtEntities
public net.minecraft.world.entity.item.FallingBlockEntity fallDamagePerDistance # fallDamagePerDistance
public net.minecraft.world.entity.item.FallingBlockEntity fallDamageMax # fallDamageMax
public net.minecraft.world.entity.projectile.EvokerFangs warmupDelayTicks # warmupDelayTicks
public net.minecraft.world.entity.monster.SpellcasterIllager getCurrentSpell()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; # getCurrentSpell
public net.minecraft.world.level.Level levelData # levelData
public net.minecraft.server.level.ChunkMap visibleChunkMap # visibleChunkMap
public net.minecraft.server.level.ChunkHolder playerProvider # playerProvider
public net.minecraft.server.level.ChunkMap distanceManager # distanceManager
public net.minecraft.server.level.ChunkMap$DistanceManager
public net.minecraft.server.level.DistanceManager tickets # tickets
public net.minecraft.server.level.Ticket key # key
public net.minecraft.server.level.ServerLevel serverLevelData # serverLevelData
public net.minecraft.world.level.biome.Biome climateSettings # climateSettings
public net.minecraft.server.level.ChunkMap serverViewDistance # serverViewDistance
public net.minecraft.server.level.DistanceManager simulationDistance # simulationDistance
public net.minecraft.server.level.ServerChunkCache spawnFriendlies # spawnFriendlies
public net.minecraft.server.level.ServerChunkCache spawnEnemies # spawnEnemies
public net.minecraft.world.level.GameRules$Value deserialize(Ljava/lang/String;)V # deserialize
public net.minecraft.world.level.GameRules$Value onChanged(Lnet/minecraft/server/MinecraftServer;)V # onChanged
public net.minecraft.world.entity.raid.Raids raidMap # raidMap
public net.minecraft.world.level.GameRules$BooleanValue deserialize(Ljava/lang/String;)V # deserialize
public net.minecraft.world.level.GameRules$IntegerValue deserialize(Ljava/lang/String;)V # deserialize
public net.minecraft.server.players.PlayerList players # players
public net.minecraft.server.MinecraftServer resources # resources
public-f net.minecraft.server.players.PlayerList maxPlayers # maxPlayers
public net.minecraft.server.dedicated.Settings properties # properties
public net.minecraft.server.dedicated.DedicatedServer settings # settings
public net.minecraft.server.MinecraftServer LOGGER # LOGGER
public net.minecraft.server.dedicated.DedicatedServerProperties$WorldDimensionData
public net.minecraft.server.Main forceUpgrade(Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/core/RegistryAccess;Z)V # forceUpgrade
public net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess levelDirectory # levelDirectory
public net.minecraft.server.MinecraftServer executor # executor
public net.minecraft.server.MinecraftServer prepareLevels(Lnet/minecraft/server/level/progress/ChunkProgressListener;)V # prepareLevels
public net.minecraft.server.level.ChunkMap progressListener # progressListener
public net.minecraft.world.inventory.AbstractContainerMenu <init>(Lnet/minecraft/world/inventory/MenuType;I)V # <init>
public net.minecraft.world.inventory.CraftingMenu craftSlots # craftSlots
public net.minecraft.world.inventory.CraftingMenu resultSlots # resultSlots
public net.minecraft.world.item.MapItem createNewSavedData(Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapId; # createNewSavedData
public net.minecraft.server.MinecraftServer storageSource # storageSource
public net.minecraft.server.MinecraftServer serverThread # serverThread
public-f net.minecraft.world.inventory.AbstractContainerMenu lastSlots # lastSlots
public-f net.minecraft.world.inventory.AbstractContainerMenu slots # slots
public-f net.minecraft.world.inventory.AbstractContainerMenu remoteSlots # remoteSlots
public net.minecraft.world.entity.Mob handDropChances # handDropChances
public net.minecraft.world.entity.Mob armorDropChances # armorDropChances
public net.minecraft.world.level.block.ComposterBlock$EmptyContainer
public net.minecraft.world.level.block.ComposterBlock$InputContainer
public net.minecraft.world.level.block.ComposterBlock$OutputContainer
public net.minecraft.world.inventory.AnvilMenu itemName # itemName
public net.minecraft.world.inventory.AnvilMenu cost # cost
public net.minecraft.world.CompoundContainer container1 # container1
public net.minecraft.world.CompoundContainer container2 # container2
public net.minecraft.world.inventory.MerchantContainer selectionHint # selectionHint
public net.minecraft.world.entity.Entity random # random
public net.minecraft.world.item.trading.MerchantOffer <init>(Lnet/minecraft/world/item/trading/ItemCost;Ljava/util/Optional;Lnet/minecraft/world/item/ItemStack;IIZIIFI)V # <init>
public net.minecraft.world.item.trading.MerchantOffer result # result
public-f net.minecraft.world.item.trading.MerchantOffer baseCostA # baseCostA
public-f net.minecraft.world.item.trading.MerchantOffer costB # costB
public net.minecraft.world.item.trading.MerchantOffer specialPriceDiff # specialPriceDiff
public net.minecraft.world.item.trading.MerchantOffer demand # demand
public net.minecraft.world.item.trading.MerchantOffer uses # uses
public-f net.minecraft.world.item.trading.MerchantOffer maxUses # maxUses
public-f net.minecraft.world.item.trading.MerchantOffer rewardExp # rewardExp
public-f net.minecraft.world.item.trading.MerchantOffer xp # xp
public-f net.minecraft.world.item.trading.MerchantOffer priceMultiplier # priceMultiplier
public net.minecraft.world.item.armortrim.ArmorTrim showInTooltip # showInTooltip
public net.minecraft.world.item.enchantment.ItemEnchantments showInTooltip # showInTooltip
public-f net.minecraft.world.item.enchantment.ItemEnchantments$Mutable showInTooltip # showInTooltip
public net.minecraft.world.item.crafting.Ingredient itemStacks # itemStacks
public net.minecraft.world.level.Explosion source # source
public net.minecraft.ChatFormatting code # code
public net.minecraft.server.ServerAdvancementManager GSON # GSON
public net.minecraft.world.level.StructureManager level # level
public net.minecraft.world.level.levelgen.structure.StructurePiece SHAPE_CHECK_BLOCKS # SHAPE_CHECK_BLOCKS
public net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase destroySpeed # destroySpeed
public net.minecraft.world.level.chunk.ChunkGenerator generationSettingsGetter # generationSettingsGetter
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity litTime # litTime
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity cookingProgress # cookingProgress
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity cookingTotalTime # cookingTotalTime
public net.minecraft.world.entity.player.Player sleepCounter # sleepCounter
public net.minecraft.world.entity.player.Player enchantmentSeed # enchantmentSeed
public net.minecraft.world.item.ItemCooldowns$CooldownInstance
public net.minecraft.world.item.ItemCooldowns cooldowns # cooldowns
public net.minecraft.world.item.ItemCooldowns tickCount # tickCount
public net.minecraft.world.item.ItemCooldowns$CooldownInstance endTime # endTime
public net.minecraft.world.entity.player.Player setShoulderEntityLeft(Lnet/minecraft/nbt/CompoundTag;)V # setShoulderEntityLeft
public net.minecraft.world.entity.player.Player setShoulderEntityRight(Lnet/minecraft/nbt/CompoundTag;)V # setShoulderEntityRight
public net.minecraft.world.food.FoodData exhaustionLevel # exhaustionLevel
public net.minecraft.world.food.FoodData saturationLevel # saturationLevel
public net.minecraft.world.food.FoodData foodLevel # foodLevel
public-f net.minecraft.world.entity.LivingEntity invulnerableDuration # invulnerableDuration
public net.minecraft.world.entity.LivingEntity lastHurt # lastHurt
public net.minecraft.world.entity.LivingEntity useItemRemaining # useItemRemaining
public net.minecraft.world.entity.LivingEntity DATA_ARROW_COUNT_ID # DATA_ARROW_COUNT_ID
public net.minecraft.server.players.PlayerList playerIo # playerIo
public net.minecraft.stats.RecipeBook known # known
public net.minecraft.server.level.ServerPlayer lastSentExp # lastSentExp
public net.minecraft.server.level.ServerPlayer spawnInvulnerableTime # spawnInvulnerableTime
public net.minecraft.world.entity.player.Abilities flyingSpeed # flyingSpeed
public net.minecraft.world.entity.player.Abilities walkingSpeed # walkingSpeed
public net.minecraft.world.entity.LivingEntity DATA_HEALTH_ID # DATA_HEALTH_ID
public net.minecraft.server.level.ServerPlayer language # language
public net.minecraft.world.entity.ItemBasedSteering boosting # boosting
public net.minecraft.world.entity.ItemBasedSteering boostTime # boostTime
public net.minecraft.world.entity.ItemBasedSteering boostTimeTotal()I # boostTimeTotal
public net.minecraft.world.level.chunk.storage.EntityStorage entityDeserializerQueue # entityDeserializerQueue
public-f net.minecraft.server.ReloadableServerResources commands # commands
public net.minecraft.server.MinecraftServer progressListenerFactory # progressListenerFactory
public net.minecraft.world.effect.SaturationMobEffect
public net.minecraft.world.effect.RegenerationMobEffect
public net.minecraft.world.effect.PoisonMobEffect
public net.minecraft.world.effect.HungerMobEffect
public net.minecraft.world.effect.HealOrHarmMobEffect
public net.minecraft.world.item.crafting.AbstractCookingRecipe result # result
public net.minecraft.world.item.crafting.AbstractCookingRecipe ingredient # ingredient
public net.minecraft.world.item.crafting.AbstractCookingRecipe experience # experience
public net.minecraft.world.item.crafting.AbstractCookingRecipe cookingTime # cookingTime
public net.minecraft.world.item.crafting.AbstractCookingRecipe group # group
public net.minecraft.world.item.crafting.SingleItemRecipe ingredient # ingredient
public net.minecraft.world.item.crafting.SingleItemRecipe result # result
public net.minecraft.world.item.crafting.SingleItemRecipe group # group
public net.minecraft.world.item.crafting.ShapedRecipe result # result
public net.minecraft.world.item.crafting.ShapedRecipe group # group
public net.minecraft.world.item.crafting.ShapedRecipe pattern # pattern
public net.minecraft.world.item.crafting.ShapelessRecipe result # result
public net.minecraft.world.item.crafting.ShapelessRecipe group # group
public net.minecraft.world.item.crafting.ShapelessRecipe category()Lnet/minecraft/world/item/crafting/CraftingBookCategory; # category
public net.minecraft.world.item.crafting.ShapelessRecipe ingredients # ingredients
public net.minecraft.world.item.crafting.SmithingTrimRecipe template # template
public net.minecraft.world.item.crafting.SmithingTrimRecipe base # base
public net.minecraft.world.item.crafting.SmithingTrimRecipe addition # addition
public net.minecraft.world.item.crafting.SmithingTransformRecipe template # template
public net.minecraft.world.item.crafting.SmithingTransformRecipe result # result
public net.minecraft.world.item.crafting.SmithingTransformRecipe base # base
public net.minecraft.world.item.crafting.SmithingTransformRecipe addition # addition
public net.minecraft.world.item.crafting.RecipeManager byType # byType
public net.minecraft.world.item.crafting.RecipeManager byName # byName
public net.minecraft.server.level.ChunkMap$TrackedEntity serverEntity # serverEntity
public net.minecraft.world.entity.projectile.AbstractHurtingProjectile assignDirectionalMovement(Lnet/minecraft/world/phys/Vec3;D)V # assignDirectionalMovement
public net.minecraft.server.level.ServerPlayer findRespawnAndUseSpawnBlock(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; # findRespawnAndUseSpawnBlock
public net.minecraft.server.dedicated.DedicatedServer serverLinks # serverLinks
